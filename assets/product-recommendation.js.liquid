async function initProductRecommendation(selector) {
  const productId = selector.dataset.productId; 
  const productLimit = selector.dataset.productRecommendationLimit;
  const cardBackground = selector.dataset.cardBackground;
  const textColor = selector.dataset.textColor;
  const dataSourceId = selector.dataset.sourceId;

  const response = await fetch(
    `https://rebuyengine.com/api/v1/custom/id/${dataSourceId}?shopify_product_ids=${productId}&limit=${productLimit}&key=3c31af894205d709aacd3e8da2ed30b19782df83`,
    {
      method: 'GET',
    }
  );
  const data = await response.json();

  //get custom recommended products section
  const recommendedSection = selector.innerHTML;
  const recommendationDOM = new DOMParser().parseFromString(recommendedSection, 'text/html');
  const productListEl = recommendationDOM.querySelector("product-list");

  let fetchProductCards = data.data.map(product=>fetch(`/products/${product.handle}?view=card`).then(res=>res.text()).then(html=>html))
  let productCards = await Promise.all(fetchProductCards);
  productCards.forEach(productcard=>productListEl.insertAdjacentHTML("beforeend", productcard));
  selector.closest(".section-stack").appendChild(recommendationDOM.body.firstChild);

  console.log("recommendationDOM.body.firstChild",recommendationDOM.body.firstChild);
  
  selector.remove();
}

document.addEventListener('DOMContentLoaded', () => {
  (async () => {
    const selectors = document.querySelectorAll('[data-product-recommendation]');
    if (selectors.length == 0) return;
    selectors.forEach(selector=> initProductRecommendation(selector));
  })()
});

